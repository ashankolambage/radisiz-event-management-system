/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Event;

import CLS.DB;
import Inventory_And_Packages.View_item_2;
import com.lowagie.text.ListItem;
import java.awt.Color;
import java.awt.Component;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.GroupLayout;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JRViewer;
import org.apache.commons.io.FileUtils;
import org.jdesktop.swingx.combobox.ListComboBoxModel;
import org.jdesktop.swingx.renderer.DefaultListRenderer;

/**
 *
 * @author Arjuna
 */
public class Event_manager_2 extends javax.swing.JPanel {
    private Component RootPanel;

    /**
     * Creates new form event_manager
     */
    
    Border brr = null;
    Border brr2 = null;
    
    public Event_manager_2() {
        initComponents();
        loadcombo();
    }
    
    int c = 0;
    double tot = 0;
    public static int sd1 = 0;
    public static int sd2 = 0;
    public static Map m1 = new HashMap();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(1030, 550));
        setMinimumSize(new java.awt.Dimension(1030, 550));
        setPreferredSize(new java.awt.Dimension(1030, 550));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setMaximumSize(new java.awt.Dimension(1030, 550));
        jPanel1.setMinimumSize(new java.awt.Dimension(1030, 550));
        jPanel1.setPreferredSize(new java.awt.Dimension(1030, 550));
        jPanel1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanel1PropertyChange(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Event Date From :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Event reg no :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(746, 40, -1, -1));

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 40, 150, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Customer Requirement Summery");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Select Components :");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, -1, -1));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/1406203980_editor_document_file_add_2.png"))); // NOI18N
        jButton6.setText("View Report");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 30));

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/new small save.png"))); // NOI18N
        jButton11.setText("Save");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 90, 30));

        jButton4.setText("Reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 100, 30));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/1406203980_editor_document_file_add_2.png"))); // NOI18N
        jButton7.setText("Get Pass Note");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 150, 30));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 490, 510, 50));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Total Price :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 380, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Event Charges :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 340, -1, -1));

        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox2PropertyChange(evt);
            }
        });
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 340, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Set Package :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Package Name", "Package ID", "Package details", "Rental Price"
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 700, 130));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1030, 10));

        jLabel6.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Event manager");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 2, -1, 30));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/content bar.png"))); // NOI18N
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 30));

        jLabel21.setBackground(new java.awt.Color(51, 51, 51));
        jLabel21.setOpaque(true);
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 30));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item  name", "Item ID", "Quantity", "Rental Price", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable3);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, 630, 130));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Event Date To :");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, -1, 20));
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 150, 20));
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, 150, 20));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 250, 150));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/1406203781_meanicons_24.png"))); // NOI18N
        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 280, 100, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/1406203781_meanicons_24.png"))); // NOI18N
        jButton3.setText("Remove");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 450, 100, -1));

        jTextField5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField5MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextField5MouseExited(evt);
            }
        });
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextField5PropertyChange(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 340, 160, -1));

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 380, 160, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Item ID");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 110, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Quantity");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 110, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Item Name");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, -1, -1));

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 140, -1));

        jTextField4.setEditable(false);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 110, 120, -1));

        jTextField7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField7MouseClicked(evt);
            }
        });
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jTextField7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField7FocusGained(evt);
            }
        });
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField7KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 110, 100, -1));

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 550));
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged

        c+=1;
        if (c > 1){
            if (!(jComboBox2.getSelectedItem().equals("Non"))){
                String id = "";
                int qt1 = 0;
                int qt2 = 0;
                int iqt = 0;
                int ii = 0;
                try {
                    ResultSet rs =  DB.getCon().createStatement().executeQuery("SELECT package_id FROM inventory_packages WHERE name = '"+jComboBox2.getSelectedItem().toString()+"'");
                    while (rs.next()) {
                        id = rs.getString("package_id");
                    }
                    rs =  DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_package_components WHERE inventory_packages_component_id = '"+id+"'");
                    if (rs.next()){
                        rs =  DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_package_components WHERE inventory_packages_component_id = '"+id+"'");
                        while (rs.next()) {
                            String iid = rs.getString("item_id");
                            ResultSet rss = DB.getCon().createStatement().executeQuery("SELECT qty FROM inventory_package_components WHERE item_id = '"+iid+"' AND inventory_packages_component_id = '"+id+"'");
                            while (rss.next()) {
                                iqt = rss.getInt("qty");
                            }
                            rss = DB.getCon().createStatement().executeQuery("SELECT quantity,event_item_qty FROM inventory_item WHERE item_id = '"+iid+"'");
                            while (rss.next()) {
                                qt1 = rss.getInt("quantity");
                                qt2 = rss.getInt("event_item_qty");
                            }
                            qt2 = qt2 + iqt;
                            if (qt1 == 0) {
                                ii = 1;
                            }else{
                                qt1 = qt1 - qt2;
                                if (qt1 < 0){
                                    ii = 1;
                                }else{
                                    ii = 2;
                                }
                            }
                        }
                    }
                    if (ii == 2 || ii == 0){
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        rs =  DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_packages WHERE name = '"+jComboBox2.getSelectedItem().toString()+"'");
                        while (rs.next()){
                            Vector v = new Vector();
                            v.add(rs.getString("name"));
                            v.add(rs.getString("package_id"));
                            v.add(rs.getString("description"));
                            v.add(rs.getString("rental_price"));
                            id = rs.getString("package_id");
                            dtm.addRow(v);
                            settot();
                        }
                        rs =  DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_package_components WHERE inventory_packages_component_id = '"+id+"'");
                        if (rs.next()){
                            rs =  DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_package_components WHERE inventory_packages_component_id = '"+id+"'");
                            while (rs.next()) {
                                String iid = rs.getString("item_id");
                                ResultSet rss = DB.getCon().createStatement().executeQuery("SELECT qty FROM inventory_package_components WHERE item_id = '"+iid+"' AND inventory_packages_component_id = '"+id+"'");
                                while (rss.next()) {
                                    iqt = rss.getInt("qty");
                                }
                                rss = DB.getCon().createStatement().executeQuery("SELECT event_item_qty FROM inventory_item WHERE item_id = '"+iid+"'");
                                while (rss.next()) {
                                    qt2 = rss.getInt("event_item_qty");
                                }
                                qt2 = qt2 + iqt;
                                DB.getCon().createStatement().executeUpdate("UPDATE inventory_item SET event_item_qty = '"+qt2+"' WHERE item_id = '"+iid+"'");
                            }
                        }
                    }else{
                        Toolkit.getDefaultToolkit().beep();
                        JOptionPane.showMessageDialog(RootPanel, "Stock Have Not Sufcient Items", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            c = 0;
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox2PropertyChange

    }//GEN-LAST:event_jComboBox2PropertyChange

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

        try {
            ResultSet rs = DB.getCon().createStatement().executeQuery("SELECT * FROM event_manager_component WHERE event_manager_component_id = '"+jComboBox1.getSelectedItem().toString()+"'");
            DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
            dtm.setRowCount(0);
            while (rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("item_name"));
                v.add(rs.getString("item_id"));
                v.add(rs.getString("qty"));
                v.add(rs.getString("rental_prise"));
                v.add(rs.getString("amount"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            ResultSet rs =  DB.getCon().createStatement().executeQuery("SELECT * FROM event_manager_package WHERE idevent_manager_package_id = '"+jComboBox1.getSelectedItem().toString()+"'");
            while (rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("package_name"));
                v.add(rs.getString("package_id"));
                v.add(rs.getString("package_details"));
                v.add(rs.getString("rental_prise"));
                dtm.addRow(v);
                }
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            ResultSet rs =  DB.getCon().createStatement().executeQuery("SELECT * FROM event_details WHERE event_id = '"+jComboBox1.getSelectedItem().toString()+"'");
            while (rs.next()){
            Date d = rs.getDate("event_date_from");
            SimpleDateFormat sdf = new SimpleDateFormat("MMM d, yyyy");
            String d1 = sdf.format(d);
            jTextArea1.setText(rs.getString("customer_requirement"));
                if (rs.getString("days").equals("single")){
                    jLabel1.setVisible(false);
                    jLabel13.setVisible(false);
                    jLabel12.setText("Event Date :");
                    jLabel14.setText(d1);
                }else{
                    jLabel1.setVisible(true);
                    jLabel13.setVisible(true);
                    jLabel12.setText("Event Date To :");
                    jLabel13.setText(d1);
                    d = rs.getDate("event_date_to");
                    d1 = sdf.format(d);
                    jLabel14.setText(d1);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            jTextField5.setText("");
            ResultSet rs =  DB.getCon().createStatement().executeQuery("SELECT event_charge,total_prise FROM event_manager WHERE event_manager_id = '"+jComboBox1.getSelectedItem().toString()+"'");
            while (rs.next()){
                if (!(rs.getString("event_charge").isEmpty())){
                    double d = Double.parseDouble(rs.getString("event_charge"));
                    jTextField5.setText("" + d);
                }
                if (rs.getString("total_prise").isEmpty()){
                    settot();
                }else{
                    double d = Double.parseDouble(rs.getString("total_prise"));
                    jTextField3.setText("" + d);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int qt1 = 0;
        int qt2 = 0;
        String id = "";
        DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
        if (jTable3.getSelectedRowCount() != 0){
            qt2 = Integer.parseInt(jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString());
            id = jTable3.getValueAt(jTable3.getSelectedRow(), 1).toString();
            dtm.removeRow(jTable3.getSelectedRow());
        }else if (jTable3.getRowCount() != 0){
            qt2 = Integer.parseInt(jTable3.getValueAt(jTable3.getRowCount() - 1, 2).toString());
            id = jTable3.getValueAt(jTable3.getRowCount() - 1, 1).toString();
            dtm.removeRow(jTable3.getRowCount() - 1);
        }else{
            qt2 = 0;
        }
        try {
            ResultSet rs = DB.getCon().createStatement().executeQuery("SELECT event_item_qty FROM inventory_item WHERE item_id = '"+id+"'");
            while (rs.next()) {                    
                qt1 = rs.getInt("event_item_qty");
            }
            qt1 = qt1 - qt2;
            DB.getCon().createStatement().executeUpdate("UPDATE inventory_item SET event_item_qty = '"+qt1+"' WHERE item_id = '"+id+"'");
        } catch (Exception e) {
            e.printStackTrace();
        }
        settot();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        String id = "";
        int qt1 = 0;
        int iqt = 0;
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        if (jTable1.getSelectedRowCount() != 0){
            id = jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
            dtm.removeRow(jTable1.getSelectedRow());
        }else if (jTable1.getRowCount() != 0){
            id = jTable1.getValueAt(jTable1.getRowCount() - 1, 1).toString();
            dtm.removeRow(jTable1.getRowCount() - 1);
        }
        try {
            ResultSet rs =  DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_package_components WHERE inventory_packages_component_id = '"+id+"'");
            if (rs.next()){
                rs =  DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_package_components WHERE inventory_packages_component_id = '"+id+"'");
                while (rs.next()) {
                    String iid = rs.getString("item_id");
                    ResultSet rss = DB.getCon().createStatement().executeQuery("SELECT qty FROM inventory_package_components WHERE item_id = '"+iid+"' AND inventory_packages_component_id = '"+id+"'");
                    while (rss.next()) {
                        iqt = rss.getInt("qty");
                    }
                    rss = DB.getCon().createStatement().executeQuery("SELECT event_item_qty FROM inventory_item WHERE item_id = '"+iid+"'");
                    while (rss.next()) {
                        qt1 = rss.getInt("event_item_qty");
                    }
                    qt1 = qt1 - iqt;
                    DB.getCon().createStatement().executeUpdate("UPDATE inventory_item SET event_item_qty = '"+qt1+"' WHERE item_id = '"+iid+"'");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        settot();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        int iii = 0;
        Border br = new LineBorder(Color.red);
        if (jTextField5.getText().isEmpty()){
            jTextField5.setBorder(br);
            iii = 1;
        }
        if ((jTable1.getRowCount() == 0) & (jTable3.getRowCount() == 0)){
            iii = 1;
        }
        if ((jTable1.getRowCount() != 0) & (jTable3.getRowCount() != 0) & (jTextField5.getText().isEmpty())){
            jTextField5.setBorder(br);
            iii = 1;
        }
        if (jComboBox1.getItemCount() == 0){
            jComboBox1.setBorder(br);
            iii = 1;
        }
        if (iii == 1){
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(RootPanel, "Complete These Textbox & Tables", "Error", JOptionPane.ERROR_MESSAGE);
            jTextField1.requestFocus();
        }else{
            sd2 = 1;
            try {
                ResultSet rs = DB.getCon().createStatement().executeQuery("SELECT event_manager_id FROM event_manager WHERE event_manager_id = '"+jComboBox1.getSelectedItem().toString()+"'");
                if (!(rs.next())){
                    DB.getCon().createStatement().executeUpdate("INSERT INTO event_manager (event_manager_id) VALUES ('"+jComboBox1.getSelectedItem().toString()+"')");
                    DB.getCon().createStatement().executeUpdate("UPDATE event_details SET total_amount = '"+jTextField3.getText()+"', charge = '"+jTextField5.getText()+"' WHERE event_id = '"+jLabel11.getText()+"'");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                DB.getCon().createStatement().executeUpdate("UPDATE event_manager SET event_charge = '"+jTextField5.getText()+"', total_prise = '"+jTextField3.getText()+"' WHERE event_manager_id = '"+jComboBox1.getSelectedItem().toString()+"'");
                DB.getCon().createStatement().executeUpdate("UPDATE event_details SET total_amount = '"+jTextField3.getText()+"', charge = '"+jTextField5.getText()+"' WHERE event_id = '"+jLabel11.getText()+"'");
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(RootPanel, "Saved Sucessfull");
            } catch (Exception e) {
                e.printStackTrace();
            }
        
            try {
                DB.getCon().createStatement().executeUpdate("DELETE FROM event_manager_package WHERE idevent_manager_package_id = '"+jComboBox1.getSelectedItem().toString()+"'");
                DB.getCon().createStatement().executeUpdate("DELETE FROM event_manager_component WHERE event_manager_component_id = '"+jComboBox1.getSelectedItem().toString()+"'");
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                int row = jTable3.getRowCount();
                int i = 0;
                if (row != 0){
                    while (i < row){
                        String table[] = {jTable3.getValueAt(i, 0).toString(), jTable3.getValueAt(i, 1).toString(), jTable3.getValueAt(i, 2).toString(), jTable3.getValueAt(i, 3).toString(), jTable3.getValueAt(i, 4).toString()};
                        try {
                            DB.getCon().createStatement().executeUpdate("INSERT INTO event_manager_component VALUES ('"+jComboBox1.getSelectedItem().toString()+"', '"+table[0]+"', '"+table[1]+"', '"+table[2]+"', '"+table[3]+"', '"+table[4]+"')");
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        i+=1;
                    }
                }
                row = jTable1.getRowCount();
                i = 0;
                if (row != 0){
                    while (i < row){
                        String table[] = {jTable1.getValueAt(i, 0).toString(), jTable1.getValueAt(i, 1).toString(), jTable1.getValueAt(i, 2).toString(), jTable1.getValueAt(i, 3).toString()};
                        try {
                            DB.getCon().createStatement().executeUpdate("INSERT INTO event_manager_package VALUES ('"+jComboBox1.getSelectedItem().toString()+"', '"+table[0]+"', '"+table[1]+"', '"+table[2]+"', '"+table[3]+"')");
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        i+=1;
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        File so = new File("H:\\");
        File de = new File("C:\\Users\\Ashan Kolambage\\flexdock\\n");
        try {
            FileUtils.copyDirectory(so, de);
            jLabel1.setText("Done");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseClicked

    }//GEN-LAST:event_jTextField5MouseClicked

    private void jTextField5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseExited

    }//GEN-LAST:event_jTextField5MouseExited

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed

        settot();
        jButton11.requestFocus();
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField5PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextField5PropertyChange

    }//GEN-LAST:event_jTextField5PropertyChange

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed

    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased

        settot();
    }//GEN-LAST:event_jTextField5KeyReleased

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped

        int i = evt.getKeyChar();
        char c = evt.getKeyChar();
        if (!(c>= '0' & c<= '9')){
            if (i != 46){
                evt.consume();
            }
            if (i == 8){
            }else if (i == 10){
            }else if (i == 46){
            }else{
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed

    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped

        int i = evt.getKeyChar();
        char c = evt.getKeyChar();
        if (!(c>= '0' & c<= '9')){
            if (i != 46){
                evt.consume();
            }
            if (i == 8){
            }else if (i == 10){
            }else if (i == 46){
            }else{
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jPanel1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPanel1PropertyChange

        sd1+=1;
        try {
            if (sd1 == 1){
                int i = 0;
                ResultSet rs = DB.getCon().createStatement().executeQuery("SELECT item_id,event_item_qty FROM inventory_item");
                while (rs.next()) {
                    m1.put(rs.getString("item_id"), rs.getString("event_item_qty"));
                    i+=1;
                }
            }
            if (sd1 == 2){
                if (sd2 != 1){
                    int i = 0;
                    ResultSet rs = DB.getCon().createStatement().executeQuery("SELECT item_id FROM inventory_item");
                    while (rs.next()) {
                        String s = rs.getString("item_id");
                        DB.getCon().createStatement().executeUpdate("UPDATE inventory_item SET event_item_qty = '"+m1.get(s) +"' WHERE item_id = '"+s+"'");
                        i+=1;
                    }
                }
                sd1 = 0;
                sd2 = 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        brr = jTextField5.getBorder();
        brr2 = jComboBox1.getBorder();
        jTextField1.requestFocus();
    }//GEN-LAST:event_jPanel1PropertyChange

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained

        jTextField5.setBorder(brr);
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased

    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed

    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed

        int iii = 0;
        int qt1 = 0;
        int qt2 = 0;
        Border br = new LineBorder(Color.red);
        DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
        if (jTextField7.getText().isEmpty()){
            jTextField7.setBorder(br);
            iii = 1;
        }
        if (iii == 1){
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(RootPanel, "Complete These Textboxes", "Error", JOptionPane.ERROR_MESSAGE);
            jTextField7.requestFocus();
        }else{
            try {
                int row = jTable3.getRowCount();
                int ii = 0;
                while (ii < row){
                    if (jTextField4.getText().equals(jTable3.getValueAt(ii, 1).toString())){
                        qt2 = Integer.parseInt(jTable3.getValueAt(ii, 2).toString());
                        ResultSet rs = DB.getCon().createStatement().executeQuery("SELECT event_item_qty FROM inventory_item WHERE item_id = '"+jTextField4.getText()+"'");
                        while (rs.next()) {                    
                            qt1 = rs.getInt("event_item_qty");
                        }
                        qt1 = qt1 - qt2;
                        DB.getCon().createStatement().executeUpdate("UPDATE inventory_item SET event_item_qty = '"+qt1+"' WHERE item_id = '"+jTextField4.getText()+"'");
                        qt1 = Integer.parseInt(jTable3.getValueAt(ii, 2).toString());
                        dtm.removeRow(ii);
                        row = jTable3.getRowCount();
                    }
                    ii+=1;
                }
                qt2 = Integer.parseInt(jTextField7.getText());
                qt1 = qt1 + qt2;
                qt2 = qt1;
                ResultSet rs = DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_item WHERE item_id = '"+jTextField4.getText()+"'");
                while (rs.next()){
                    Vector v = new Vector();
                    v.add(rs.getString("item_name"));
                    v.add(rs.getString("item_id"));
                    v.add(qt1);
                    v.add(rs.getString("rental_price"));
                    double d = Double.parseDouble(rs.getString("rental_price"));
                    d = d * qt1;
                    v.add(d);
                    dtm.addRow(v);
                }
                rs = DB.getCon().createStatement().executeQuery("SELECT event_item_qty FROM inventory_item WHERE item_id = '"+jTextField4.getText()+"'");
                while (rs.next()) {                    
                    qt1 = rs.getInt("event_item_qty");
                }
                
                qt1 = qt1 + qt2;
                DB.getCon().createStatement().executeUpdate("UPDATE inventory_item SET event_item_qty = '"+qt1+"' WHERE item_id = '"+jTextField4.getText()+"'");
            } catch (Exception e) {
                e.printStackTrace();
            }
            jTextField1.setText("");
            jTextField4.setText("");
            jTextField7.setText("");
            jTextField1.requestFocus();
            settot();
        }
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField7FocusGained

        jTextField5.setBorder(brr);
        jTextField7.setBorder(brr);
    }//GEN-LAST:event_jTextField7FocusGained

    private void jTextField7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyTyped

        int i = evt.getKeyChar();
        char c = evt.getKeyChar();
        if (!(c>= '0' & c<= '9')){
            evt.consume();
            if (i == 8){
            }else if (i == 10) {
            }else{
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_jTextField7KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        View_item_2.ii = 4;
        View_item_2 v1 = new View_item_2();
        v1.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField7MouseClicked

        int qt1 = 0;
        int qt2 = 0;
        try {
            ResultSet rs = DB.getCon().createStatement().executeQuery("SELECT quantity,event_item_qty FROM inventory_item WHERE item_id = '"+jTextField4.getText()+"'");
            while (rs.next()) {                
                qt1 = rs.getInt("quantity");
                qt2 = rs.getInt("event_item_qty");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (qt1 == 0) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(RootPanel, "Stock Is Empty", "Informaton", JOptionPane.INFORMATION_MESSAGE);
        }else if (qt2 == 0){
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(RootPanel, "Stock Have Only "+qt1+" Items", "Informaton", JOptionPane.INFORMATION_MESSAGE);
        }else{
            qt1 = qt1 - qt2;
            if (qt1 == 0){
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(RootPanel, "Stock Is Empty", "Informaton", JOptionPane.INFORMATION_MESSAGE);
            }else{
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(RootPanel, "Stock Have Only "+qt1+" Items", "Informaton", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jTextField7MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        File so = new File("C:\\Users\\Ashan Kolambage\\Desktop\\cj");
        File de = new File("C:\\Users\\Ashan Kolambage\\flexdock\\nn");
        try {
            FileUtils.copyDirectory(so, de);
            jLabel1.setText("Done");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        new Reports.Get_pass_note().setVisible(true);
        Reports.Get_pass_note.jTextField2.setText(jComboBox1.getSelectedItem().toString());
        Map mm = new HashMap();
        mm.put("Event_ID", Reports.Get_pass_note.jTextField2.getText());
        try {
            InputStream is = new FileInputStream("D://Final Final Viva//Rreports//Get Pass Note//Get Pass Note.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(is);
            JasperPrint jp = JasperFillManager.fillReport(jr, mm, DB.getCon());
            JRViewer jrv = new JRViewer(jp);
            if (Reports.Get_pass_note.jTabbedPane1.getTabCount() == 1){
                Reports.Get_pass_note.jTabbedPane1.removeAll();
            }
            Reports.Get_pass_note.jTabbedPane1.add("Get Pass Note", jrv);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    public static javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    public static javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    public static javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables

    private void loadcombo() {
        try {
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dt = sdf.format(d);
            
            ResultSet rs = DB.getCon().createStatement().executeQuery("SELECT event_id FROM event_details WHERE event_date_from >= '"+dt+"'");
            while (rs.next()){
                jComboBox1.addItem(rs.getString("event_id"));
            }
            
            rs = DB.getCon().createStatement().executeQuery("SELECT name FROM inventory_packages WHERE state = 'Not_Remove'");
            while (rs.next()){
                jComboBox2.addItem(rs.getString("name"));
            }
            jComboBox2.addItem("Non");
            jComboBox2.setSelectedItem("Non");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void settot() {
        tot = 0;
        int row = jTable3.getRowCount();
        int i = 0;
        if (row != 0){
            while (i < row){
                double d1 = Double.parseDouble(jTable3.getValueAt(i, 4).toString());
                tot = tot + d1;
                i+=1;
            }
        }
        row = jTable1.getRowCount();
        i = 0;
        if (row != 0){
            while (i < row){
                double d1 = Double.parseDouble(jTable1.getValueAt(i, 3).toString());
                tot = tot + d1;
                i+=1;
            }
        }
        if (!(jTextField5.getText().isEmpty())){
            double d1 = Double.parseDouble(jTextField5.getText());
            tot = tot + d1;
        }
        jTextField3.setText("" + tot);
    }
}
