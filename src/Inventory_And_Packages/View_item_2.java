/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventory_And_Packages;

import CLS.DB;
import Event.Event_manager_1;
import Event.Event_manager_2;
import Event.Event_manager_3;
import Main_Menu.Event_calender;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.ResultSet;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ashan Kolambage
 */
public class View_item_2 extends javax.swing.JFrame {

    /**
     * Creates new form view_item1
     */
    
    public View_item_2() {
        initComponents();
        loadtable();
        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
    }
    
    public static int ii = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View Package Items");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("ID Or Name :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Category", "Rental Price", "Current Quantity", "All Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, 590, 310));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jRadioButton1.setBackground(new java.awt.Color(153, 153, 153));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButton1.setText("Item Name");
        jRadioButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton1ItemStateChanged(evt);
            }
        });
        jPanel1.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, -1));

        jRadioButton2.setBackground(new java.awt.Color(153, 153, 153));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButton2.setText("Category");
        jRadioButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton2ItemStateChanged(evt);
            }
        });
        jPanel1.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, -1, -1));

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 250, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 380));

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        if (evt.getClickCount() == 2){
            if (ii == 1){
                Package_detailss.jTextField3.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                ii = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
                Package_detailss.jTextField7.requestFocus();
                this.dispose();
            }else if (ii == 2){
                Add_newPackage.jTextField3.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                ii = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
                Add_newPackage.jTextField7.requestFocus();
                this.dispose();
            }else if (ii == 3){
                Event_manager_1.jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                Event_manager_1.jTextField4.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                this.dispose();
            }else if (ii == 4){
                Event_manager_2.jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                Event_manager_2.jTextField4.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                this.dispose();
            }else if (ii == 5){
                Event_manager_3.jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                Event_manager_3.jTextField4.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                this.dispose();
            }else if (ii == 6){
                String s = "";
                String id  = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
                try {
                    ResultSet rs = DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_item WHERE item_id = '"+id+"'");
                    while (rs.next()){
                        Report_damaged_item.jTextField1.setText(rs.getString("item_name"));
                        Report_damaged_item.jTextField3.setText(rs.getString("brand"));
                        Report_damaged_item.jTextField4.setText(rs.getString("type"));
                        Report_damaged_item.jTextField5.setText(rs.getString("rental_price"));
                        Report_damaged_item.jTextField7.setText(rs.getString("item_id"));
                        s  = rs.getString("image");
                    }
                    if (s != null){
                        s = s.replace("/", "//");
                        InputStream is = new FileInputStream(s);
                        BufferedImage read = ImageIO.read(is);
                        Image icon = read.getScaledInstance(Report_damaged_item.jLabel4.getWidth(), Report_damaged_item.jLabel4.getHeight(), Image.SCALE_SMOOTH);
                        Report_damaged_item.jLabel4.setIcon(new ImageIcon(icon));
                    }else{
                        Report_damaged_item.jLabel4.setIcon(null);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                Report_damaged_item.jTextArea1.requestFocus();
                this.dispose();
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jRadioButton1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton1ItemStateChanged

        jTextField1.requestFocus();
    }//GEN-LAST:event_jRadioButton1ItemStateChanged

    private void jRadioButton2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton2ItemStateChanged

        jTextField1.requestFocus();
    }//GEN-LAST:event_jRadioButton2ItemStateChanged

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased

        ResultSet rs = null;
        if (jTextField1.getText().isEmpty()){
            jRadioButton1.setVisible(false);
            jRadioButton2.setVisible(false);
        }
        try {
            if (jTextField1.getText().length() >= 5){
                String s = jTextField1.getText().substring(0, 5);
                if (s.equals("init_")){
                    rs = DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_item WHERE item_id LIKE '"+jTextField1.getText()+"%'");
                }else{
                    jRadioButton1.setVisible(true);
                    jRadioButton2.setVisible(true);
                    if (jRadioButton2.isSelected()){
                        rs = DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_item WHERE category LIKE '%"+jTextField1.getText()+"%'");
                    }else{
                        rs = DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_item WHERE item_name LIKE '%"+jTextField1.getText()+"%'");
                    }
                }
            }else{
                jRadioButton1.setVisible(true);
                jRadioButton2.setVisible(true);
                if (jRadioButton2.isSelected()){
                    rs = DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_item WHERE category LIKE '%"+jTextField1.getText()+"%'");
                }else{
                    rs = DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_item WHERE item_name LIKE '%"+jTextField1.getText()+"%'");
                }
            }
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            while(rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("item_id"));
                v.add(rs.getString("item_name"));
                v.add(rs.getString("category"));
                v.add(rs.getString("use_for"));
                v.add(rs.getString("rental_price"));
                v.add(rs.getString("quantity"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (jTextField1.getText().isEmpty()){
            loadtable();
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_item_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_item_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_item_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_item_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View_item_2().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void loadtable() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        int qt1 = 0;
        int qt2 = 0;
        String id = "";
        try {
            ResultSet rs1 = null;
            ResultSet rs2 = DB.getCon().createStatement().executeQuery("SELECT * FROM inventory_item");
            while(rs2.next()){
                qt1 = rs2.getInt("quantity");
                id = rs2.getString("item_id");
                rs1 = DB.getCon().createStatement().executeQuery("SELECT event_item_qty FROM inventory_item WHERE item_id = '"+id+"'");
                while (rs1.next()) {                    
                    qt2 = rs1.getInt("event_item_qty");
                }
                qt1 = qt1 - qt2;
                Vector v = new Vector();
                v.add(id);
                v.add(rs2.getString("item_name"));
                v.add(rs2.getString("category"));
                v.add(rs2.getString("rental_price"));
                v.add(qt1);
                v.add(rs2.getString("quantity"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
